; 3.1 代入と局所状態
; ==================
;
; 世界は状態を持ったオブジェクトの集合に見える。
; 状態を持つというのは過去に影響されるということ。
; 状態は状態変数で表せる。
;
; オブジェクトはたいてい互いに影響しあう。
; 強く影響しあうもの同士をあつめてサブシステムにして、
; 他のサブシステムとはあんまりやりとりしないようにすると都合がいい。
;
; 状態は時間とともに変化するから、それをプログラムで実現しないといけない。
; そのために、代入という操作が必要になる。
;
; 3.1.1 局所状態変数
; ------------------
;
; 時間で状態が変わるものの例として銀行口座を考える。
; (withdraw money)という手続きは、口座にまだお金があれば残高からmoney
; を引いて、その結果を返す。お金が足りなければエラーを返す。

(withdraw 25)
75
(withdraw 25)
50
(withdraw 60)
"Insufficient funds"
(withdraw 15)
35

; (withdraw 25)が2回呼ばれてるけど、結果が違うことに注意。
; いままでは手続きは数学的な関数と見なすことができた、つまり
; 同じ引数なら何回呼んでも同じ結果。
;
; withdraw の実装のためには、たとえば残高を大域変数にすればいい。

(define balance 100) ; balanceが口座残高

(define (withdraw amount)
  (if (>= balance amount)
      (begin (set! balance (- balance amount))
             balance)
      "Insufficient funds"))

